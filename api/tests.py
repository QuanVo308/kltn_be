

import numpy as np
import json

s = """[[-0.9253336191177368, 0.2132399082183838, 0.13487422466278076, 0.22788511216640472, -0.9920669198036194, 0.10298273712396622, 0.22158581018447876, -0.5514068007469177, 0.39029932022094727, 0.7389836311340332, 0.8198956251144409, -0.7696449160575867, -1.0422190427780151, 0.8557392358779907, 0.10638665407896042, 0.9149852991104126, -0.10605311393737793, 0.9268322587013245, -0.2048266977071762, 1.6773921251296997, -0.63470858335495, 0.7245369553565979, 0.7974448204040527, -0.016623670235276222, -0.28391700983047485, -0.7704421877861023, -0.7669649124145508, 1.1078333854675293, 0.16751281917095184, 0.8808308839797974, -0.4789762496948242, 0.7146497964859009, -1.8756669759750366, 0.5383334159851074, 0.6471364498138428, -0.5287129878997803, 1.3991941213607788, -0.7954768538475037, -0.9851135015487671, -1.1026790142059326, -0.656059205532074, 0.9983307719230652, -0.4575456380844116, -1.0626723766326904, -0.5718521475791931, 1.3329747915267944, 0.6533372402191162, -0.9394872188568115, -1.7236344814300537, -0.1766359657049179, -2.548128843307495, 1.167245626449585, 0.0390869677066803, 1.8682506084442139, 1.564757227897644, -0.9019295573234558, 0.9302167296409607, 0.4904329180717468, -0.18787220120429993, -0.2603054344654083, 0.2195996642112732, -0.8863018155097961, -0.48332151770591736, 0.07334505021572113, -1.518560528755188, -0.37715762853622437, 0.03767991438508034, -0.08853911608457565, 0.4983414113521576, -1.0388946533203125, 0.3725757300853729, 0.1362588107585907, 1.5197184085845947, 0.32699576020240784, -0.8973349332809448, 0.7683303356170654, -0.37217018008232117, 0.4457283616065979, 0.050002776086330414, -0.21141186356544495, -0.41404905915260315, -1.2935291528701782, 0.7821364402770996, 0.622725248336792, 1.182781457901001, -0.4567068815231323, -1.2419993877410889, -0.25440412759780884, -1.6066696643829346, 0.057924531400203705, 0.15340137481689453, -0.49517181515693665, 0.5577234029769897, 0.5188456177711487, 0.7143722176551819, 0.6009311079978943, -0.007401589769870043, 0.09349562227725983, 0.6758955121040344, -1.3014256954193115, -1.2257357835769653, -1.1540346145629883, 0.051407478749752045, 0.9321694374084473, 0.6480752229690552, 0.10942639410495758, 1.5664006471633911, 0.10586035996675491, 0.29938042163848877, 1.1463247537612915, -0.05041322112083435, -0.5749070048332214, -0.11715690791606903, -0.1388997733592987, -0.3591635227203369, 0.3312223553657532, 0.26617854833602905, -0.9751318693161011, -0.6760526299476624, 0.40569233894348145, 0.5562213063240051, -0.1967792958021164, -1.0341510772705078, 0.1366329789161682, -1.6637992858886719, 0.8093686699867249, 1.279655933380127, 0.19474896788597107, 1.6942837238311768, -0.10925479233264923, -0.8776684403419495, 1.2691028118133545, 0.9887977242469788, -0.012790579348802567, 2.248363494873047, -1.3869295120239258, 1.2593636512756348, 0.5039713382720947, -0.6825835704803467, 0.11606728285551071, -0.6516118049621582, -0.4378608167171478, -0.9398183226585388, 2.0459253787994385, -1.1688545942306519, 0.27432289719581604, 1.2229946851730347, -0.13156761229038239, -0.8639014959335327, 0.282230019569397]]"""

# np.fromstring(s)
t = json.loads(s)
print(t)

"""test2"""
# import cv2
# import numpy as np
# from rembg import remove
# import time
# import PIL


# # img = cv2.imread("D:\Downloads\custom_test_dataset\\0201.jfif")
# img = PIL.Image.open("D:\Downloads\custom_test_dataset\\0111.JPG")
# print(np.asarray(img).shape)
# print(type(img))

# output = remove(img)
# print(np.asarray(output).shape)
# output.save('person_transp_bckgrnd.png')

# new_image = PIL.Image.new("RGB", output.size, "WHITE") 
# new_image.paste(output, mask = output.split()[3])              
# # new_image.convert('RGB') 

# # background = PIL.Image.new("RGB", new_image.size, (255, 255, 255))
# # background.paste(new_image, mask = new_image.split()[3])
# # background.save("sample_2.jpg", "JPEG", quality=100)

# print(np.asarray(new_image).shape)
# # print(np.asarray(background).shape)
# new_image.save('person_transp_bckgrnd.png')


# cv2.imwrite('person_transp_bckgrnd.png', output)

# time.sleep(10)

"""test3"""
# from multiprocessing.pool import ThreadPool
# from time import sleep

# def task(num = 1, num2 = 2):
#     # report a message
#     print(f'Task executing {num}')
#     # block for a moment
#     # sleep(1)
#     # report a message
#     print(f'Task done {num}')

# inputs = [(i, i+1) for i in range(1000)]
# # print(inputs)
# pool = ThreadPool(processes=20)
# # issue tasks to the thread pool
# results = pool.imap_unordered(task, inputs)

# for result in results:
#     print('print result', result)
# # close the thread pool
# pool.close()

